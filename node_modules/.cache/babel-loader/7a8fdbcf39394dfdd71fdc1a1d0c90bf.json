{"ast":null,"code":"import { createStore } from \"redux\";\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\"; //cartIsvisible\n\nconst initialisShownState = {\n  isshow: false\n};\nconst isshownSlice = createSlice({\n  name: \"isshownSlice\",\n  initialState: initialisShownState,\n  reducers: {\n    toggle(state) {\n      state.isshow = !state.isshow;\n    }\n\n  }\n}); //cartSLice\n\nconst cartSlice = createSlice({\n  name: \"cartSlice\",\n  initialState: {},\n  reducers: {}\n});\nconst addtoCartState = {\n  item: \"\",\n  price: \"\"\n};\nconst store = configureStore({\n  reducer: {\n    isshown: isshownSlice.reducer\n  }\n});\nexport const isshownActions = isshownSlice.actions;\nexport default store;","map":{"version":3,"sources":["/Users/skyezhang/Downloads/ReduxCart/src/store/index.js"],"names":["createStore","createSlice","configureStore","initialisShownState","isshow","isshownSlice","name","initialState","reducers","toggle","state","cartSlice","addtoCartState","item","price","store","reducer","isshown","isshownActions","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C,C,CACA;;AACA,MAAMC,mBAAmB,GAAG;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA5B;AACA,MAAMC,YAAY,GAAGJ,WAAW,CAAC;AAC/BK,EAAAA,IAAI,EAAE,cADyB;AAE/BC,EAAAA,YAAY,EAAEJ,mBAFiB;AAG/BK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,CAACC,KAAD,EAAQ;AACZA,MAAAA,KAAK,CAACN,MAAN,GAAe,CAACM,KAAK,CAACN,MAAtB;AACD;;AAHO;AAHqB,CAAD,CAAhC,C,CASA;;AACA,MAAMO,SAAS,GAAGV,WAAW,CAAC;AAC5BK,EAAAA,IAAI,EAAE,WADsB;AAE5BC,EAAAA,YAAY,EAAE,EAFc;AAG5BC,EAAAA,QAAQ,EAAC;AAHmB,CAAD,CAA7B;AAKA,MAAMI,cAAc,GAAG;AAAEC,EAAAA,IAAI,EAAE,EAAR;AAAYC,EAAAA,KAAK,EAAE;AAAnB,CAAvB;AACA,MAAMC,KAAK,GAAGb,cAAc,CAAC;AAC3Bc,EAAAA,OAAO,EAAE;AAAEC,IAAAA,OAAO,EAAEZ,YAAY,CAACW;AAAxB;AADkB,CAAD,CAA5B;AAIA,OAAO,MAAME,cAAc,GAAGb,YAAY,CAACc,OAApC;AAEP,eAAeJ,KAAf","sourcesContent":["import { createStore } from \"redux\";\n\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\n//cartIsvisible\nconst initialisShownState = { isshow: false };\nconst isshownSlice = createSlice({\n  name: \"isshownSlice\",\n  initialState: initialisShownState,\n  reducers: {\n    toggle(state) {\n      state.isshow = !state.isshow;\n    },\n  },\n});\n//cartSLice\nconst cartSlice = createSlice({\n  name: \"cartSlice\",\n  initialState: {},\n  reducers:{},\n});\nconst addtoCartState = { item: \"\", price: \"\" };\nconst store = configureStore({\n  reducer: { isshown: isshownSlice.reducer },\n});\n\nexport const isshownActions = isshownSlice.actions;\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}